[project]
name = "codemux"
version = "0.1.0"
description = "Voice-controlled tmux management for Claude Code sessions"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [{name = "codemux contributors"}]
keywords = ["tmux", "claude", "voice-control", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Terminals :: Terminal Emulators/X Terminals",
]

dependencies = [
    "libtmux>=0.33.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "basedpyright>=1.10.0",
    "ruff>=0.1.9",
    "pre-commit>=3.6.0",
]

[project.urls]
Homepage = "https://github.com/e7h4n/codemux"
Repository = "https://github.com/e7h4n/codemux"
Issues = "https://github.com/e7h4n/codemux/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = ["E402"]  # Allow module level imports after code in scripts

[tool.basedpyright]
typeCheckingMode = "strict"
pythonVersion = "3.11"
include = ["src", "tests"]
exclude = ["**/node_modules", "**/__pycache__", ".venv", "scripts"]
reportMissingImports = true
reportMissingTypeStubs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --strict-markers --cov=codemux"

[tool.coverage.run]
source = ["src/codemux"]
omit = ["*/tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
